name: Java CI with Maven

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Clonaci贸n de c贸digo
        uses: actions/checkout@v4

      # 1. Version in pom.xml
      - name: Set up JDK 8
        uses: actions/setup-java@v4.2.1
        with:
          java-version: "8"
          distribution: "temurin"

      # 2. Compile
      - name: Build with Maven
        run: mvn package

      # 3. Run tests
      - name: Running Unit Test
        run: mvn test

      # 4. Sonnar
      - name: Set up JDK 17
        uses: actions/setup-java@v4.2.1
        with:
          java-version: "17"
          distribution: "temurin"
      - run: mvn package

      # https://docs.sonarsource.com/sonarcloud/advanced-setup/ci-based-analysis/sonarscanner-for-maven
      - name: Analisis SonarCloud
        run: |
          mvn clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:3.11.0.3922:sonar \
          -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.organization=alexbgh1 \
          -Dsonar.projectKey=alexbgh1_microservicio-java

      # 5. Docker
      - name: Docker Login
        uses: docker/login-action@v3.1.0
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Build
        run: |
          docker build . -t ${{ secrets.DOCKER_USER }}/microservicio-java:latest

      - name: Docker Push
        run: |
          docker push ${{ secrets.DOCKER_USER }}/microservicio-java:latest

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      # Clonar
      - name: Clonaci贸n de c贸digo
        uses: actions/checkout@v4
      # Desplegar
      - name: Despliegue Kubernetes
        run: |
          kubectl apply -f deploy.yaml
